apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: {{ template "fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
        - name: POSTGRES_USER
          value: {{ default "postgres" .Values.postgresUser | quote }}
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: {{ default "postgres" .Values.postgresUser | quote }}
        - name: POSTGRES_DB
          value: {{ default "" .Values.postgresDatabase | quote }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: DS_RO_PASS
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: datastore-readonly-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: postgres-password
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 10
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data/pgdata
          subPath: {{ .Values.persistence.subPath }}
        - mountPath: /docker-entrypoint-initdb.d/postgres-helm-init.sh
          name: postgres-config-init
          subPath: postgres-helm-init.sh
        - mountPath: /usr/share/postgresql/postgresql.conf.sample
          name: postgres-config-sample
          subPath: postgresql.conf.sample
{{- if .Values.metrics.enabled }}
      - name: metrics 
        image: "{{ .Values.metrics.image }}:{{ .Values.metrics.imageTag }}"
        imagePullPolicy: {{ default "" .Values.metrics.imagePullPolicy | quote }}
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://postgres@127.0.0.1:5432?sslmode=disable
        ports:
        - name: metrics
          containerPort: 9187
        resources:
{{ toYaml .Values.metrics.resources | indent 10 }}
{{- end }}
      volumes:
      - name: postgres-config-sample
        configMap:
          name: {{ template "fullname" . }}-sample
          items:
          - key: postgresqlConfSample
            path: postgresql.conf.sample
      - name: postgres-config-init
        configMap:
          name: {{ template "fullname" . }}-init
          items:
          - key: postgresqlInitdbd
            path: postgres-helm-init.sh
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
      {{- if .Values.persistence.storageClassSuffix }}
        volume.beta.kubernetes.io/storage-class: {{ template "fullname" . }}-{{ .Values.persistence.storageClassSuffix }}
      {{- else }}
        {{- if .Values.persistence.storageClass }}
        volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass | quote }}
        {{- else }}
        ~
        {{- end }}
      {{- end }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
    {{- if .Values.persistence.storageClassSuffix }}
      storageClassName: {{ template "fullname" . }}-{{ .Values.persistence.storageClassSuffix }}
    {{- else }}
      {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
{{- end }}
